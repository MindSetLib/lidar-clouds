version: "3.9"

networks:
  ml_lidar:
    external: true

services:
  lidar_nginx:
    build: ./nginx
    restart: always
    volumes:
      - ${DATA_PATH}/file_storage:/var/www/lidar_files
    ports:
      - ${APP_PORT}:80
    networks:
      - ml_lidar


  lidar_api:
    build: ./lidar_api
    image: lidar_api_img
    container_name: lidar_api
    hostname: lidar_api
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - ./lidar_api/src:/home/app/src
      - ${DATA_PATH}/file_storage:/home/app/src/file_storage
      - ./ocr_configurations/ocr_configurations:/home/app/src/ocr_configurations
    command: python3 main.py
    networks:
      - ml_lidar


  lidar_detector:
    build: ./lidar_detector
    image: lidar_detector_img
    container_name: lidar_detector
    hostname: lidar_detector
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - ./lidar_detector/src:/home/app/src
      - ${DATA_PATH}/file_storage:/home/app/src/file_storage
      - ./ocr_configurations/ocr_configurations:/home/app/src/ocr_configurations
    networks:
      - ml_lidar
    command: >
      celery -A main worker
        --pool=solo
        --loglevel=INFO
        --without-gossip
        --without-mingle
        -n worker_detector@%h
        -Q detector